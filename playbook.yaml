- hosts: webservers
  become: yes
  gather_facts: no

  vars_files:
    - var.yaml
  
  tasks:
  - name: p3
    shell: sudo apt upgrade -y && sudo apt install python

  # - name: install unzip
  #   shell: |
  #     if ! command -v unzip
  #     then
  #       apt-get update
  #       apt-get install unzip
  #     fi

  # - name: Copy the artifact from master to machines
  #   copy: src={{code_path}} dest=/home/shay

  # - name: unzip code
  #   shell: cd ~ ; sudo unzip -o /home/shay/art1/zipped.zip -d /home/shay

  tasks:
  - name: Docker install
    shell: |
      if ! command -v docker;  then
        curl -fsSL https://get.docker.com/ -o get-docker.sh;
        sh get-docker.sh
      fi

  - name: remove old and unused Docker images
    shell: |
        if [ $(sudo  docker ps -aq | wc -l ) -gt 0 ]; then
          sudo docker rm -f $(sudo docker ps -qa)
          sudo docker rmi -f $(sudo docker images shaym95/bootcamp -q)
        fi  

  - name: Docker Pull
    shell: docker pull shaym95/bootcamp:latest

  - name: kill previous docker
    shell: docker rm -f bootcamp

  - name: Run your image as a container 
    shell: docker run -d -p 0.0.0.0:8080:8080/tcp shaym95/bootcamp 
  # - name: install node 
  #   shell: |
  #     curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash - && sudo apt-get install -y nodejs
  # - name: install pm2
  #   npm:
  #     name: pm2
  #     global: yes

  # - name: install pm2 startup
  #   shell: pm2 startup && sudo env PATH=$PATH:/usr/bin /usr/lib/node_modules/pm2/bin/pm2 startup systemd -u shay --hp /home/shay

  # - name: Install packages based on package.json using the npm
  #   npm:
  #     path: /home/shay/art1
  #     state: present

  - name: add .env file
    shell: | 
      echo "
      # Host configuration
      PORT=8080
      HOST={{host}}
      # Postgres configuration
      PGHOST={{pghost}}
      PGUSERNAME={{pg_username}}
      PGDATABASE=postgres
      PGPASSWORD={{pg_password}}
      PGPORT=5432
      HOST_URL=http://{{LB_ip}}:8080
      COOKIE_ENCRYPT_PWD=superAwesomePasswordStringThatIsAtLeast32CharactersLong!
      NODE_ENV=development
      # Okta configuration
      OKTA_ORG_URL={{okta_url}}
      OKTA_CLIENT_ID={{okta_client_id}}
      OKTA_CLIENT_SECRET={{okta_client_secret}}
      " > .env;
    
    tags:
         - env

  # - name: run initdb script
  #   shell: cd /home/shay && npm run initdb
  #   register: initdb
  #   tags:
  #     - initdb
  # - debug: msg="{{ initdb.stdout }}"
  #   tags:
  #     - initdb

  # - name: kill
  #   shell: pm2 kill
  #   tags:
  #     - kill
      
  # - name: run app as pm2 process
  #   shell: cd /home/shay/art1 && pm2 start src/index.js
  #   register: out
  #   tags:
  #     - run
  # - debug: var=out.stdout_lines


  # - name: save process to run at start app
  #   shell: pm2 save